

fragment ClientPlaylist on Playlist {
    _id
    name
    description
    songs
    image_path
    isPublic
    createdDate
    modifiedDate
    _deleted @client
}

query Playlist($_id: ID!) {
  playlist (_id: $_id) {
    ...ClientPlaylist 
  }
}

query Playlists {
  playlists {
    ...ClientPlaylist
  }
}

query PlaylistsSearch($query: String!) {
  playlistsSearch (query: $query) {
    ...ClientPlaylist
  }
}

query Song($_id: ID!) {
  song(_id: $_id) {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query Songs {
  songs {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}


query SongsSearch($query: String!) {
  songsSearch (query: $query) {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query PlaylistSongs($_id: ID!){
  playlistSongs(_id: $_id) {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query SongPlaylists($_id: ID!){
  songPlaylists(_id: $_id) {
    ...ClientPlaylist
  }
}

query ObjectViewsDate($_id: ID!, $groupByMinutes: Int!) {
  objectViewsDate(_id: $_id, groupByMinutes: $groupByMinutes) {
    _id
    count
  }
}

query ObjectViews($_id: ID!) {
  objectViews(_id: $_id) {
    count
  }
}

query WaveformFind($_id: ID!) {
  waveformFind(_id: $_id) {
    _id
    waveform
    songID
  }
}
query WaveformsFind($_ids: [ID!]!) {
  waveformsFind(_ids: $_ids) {
    _id
    waveform
    songID
  }
}

query CheckUserExists($userID: ID!) {
  checkUserExists(userID: $userID) 
}

query IsLikedByUser($userID: ID!, $objectID: ID!) {
  isLikedByUser(userID: $userID, objectID: $objectID) 
}

query GetLikeRefs($userID: ID!) {
  getLikeRefs(userID: $userID) {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query GetPlaylistRef($userID: ID!) {
  getPlaylistRef(userID: $userID) {
    ...ClientPlaylist
  }
}

query GetLastViewdSongs($userID: ID!) {
  getLastViewdSongs(userID: $userID) {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query GetMostViewdSongs {
  getMostViewdSongs {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query GetLatestSongs {
  getLatestSongs {
    _id
    name
    file_path
    image_path
    createdDate
    modifiedDate
    isPublic
  }
}

query GetLatestPlaylists {
  getLatestPlaylists {
    ...ClientPlaylist
  }
}

mutation SongsUpdate(
  $_id: ID!
  $name: String!
  $file_path: String!
  $image_path: String!
  $isPublic: Boolean!
) {
  songsUpdate(
    _id: $_id
    name: $name
    file_path: $file_path
    image_path: $image_path
    isPublic: $isPublic
  ) 
}

mutation PlaylistUpdate(
  $_id: ID!
  $name: String!
  $description: String!
  $image_path: String!
  $isPublic: Boolean!
) {
  playlistUpdate(
    _id: $_id
    name: $name
    description: $description
    image_path: $image_path
    isPublic: $isPublic
  ) 
}

mutation SongsDelete($_id: ID!) {
  songsDelete(_id: $_id) {
    _id
  }
}

mutation PlaylistDelete($_id: ID!) {
  playlistDelete(_id: $_id) {
    _id
  }
}

mutation SongsAdd(
  $name: String!
  $file_path: String!
  $image_path: String!
  $isPublic: Boolean!
) {
  songsAdd(
    name: $name
    file_path: $file_path
    image_path: $image_path
    isPublic: $isPublic
  ) 
}
mutation PlaylistAdd(
  $name: String!
  $description: String!
  $image_path: String!
  $isPublic: Boolean!
) {
  playlistAdd(
    name: $name
    description: $description
    image_path: $image_path
    isPublic: $isPublic
  ) 
}

mutation PlaylistAddSong(
  $_id: ID!
  $song: ID!
) {
  playlistAddSong(
    _id: $_id
    song: $song
  )
}
mutation PlaylistRemoveSong(
  $_id: ID!
  $song: ID!
) {
  playlistRemoveSong(
    _id: $_id
    song: $song
  )
}

mutation AddView($_id: ID!) {
  addView (_id: $_id)
}

mutation AddUser($userID: ID!) {
  addUser (userID: $userID)
}

mutation AddLikeRef($userID: ID!, $objectID: ID!) {
  addLikeRef (userID: $userID, objectID: $objectID)
}

mutation AddViewRef($userID: ID!, $objectID: ID!) {
  addViewRef (userID: $userID, objectID: $objectID)
}

mutation AddPlaylistRef($userID: ID!, $objectID: ID!) {
  addPlaylistRef (userID: $userID, objectID: $objectID)
}

mutation RemoveLikeRef($userID: ID!, $objectID: ID!) {
  removeLikeRef (userID: $userID, objectID: $objectID)
}

mutation RemoveViewRef($userID: ID!, $objectID: ID!) {
  removeViewRef (userID: $userID, objectID: $objectID)
}

mutation RemovePlaylistRef($userID: ID!, $objectID: ID!) {
  removePlaylistRef (userID: $userID, objectID: $objectID)
}